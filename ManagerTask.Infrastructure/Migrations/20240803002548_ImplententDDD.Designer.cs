// <auto-generated />
using System;
using ManagerTask.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManagerTask.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240803002548_ImplententDDD")]
    partial class ImplententDDD
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManagerTask.Domain.Entities.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Conteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataHoraComentario")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TarefaId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TarefaId" }, "IX_Comentarios_TarefaId");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_Comentarios_UsuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.HistoricoAtividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataHoraAtividade")
                        .HasColumnType("datetime");

                    b.Property<int?>("TarefaId")
                        .HasColumnType("int")
                        .HasColumnName("TarefaID");

                    b.Property<string>("TipoAtividade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioID");

                    b.HasKey("Id")
                        .HasName("PK__Historic__3214EC2769C92F17");

                    b.HasIndex(new[] { "TarefaId" }, "IX_HistoricoAtividades_TarefaID");

                    b.HasIndex(new[] { "UsuarioId" }, "IX_HistoricoAtividades_UsuarioID");

                    b.ToTable("HistoricoAtividades");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCriacaoProjeto")
                        .HasColumnType("datetime");

                    b.Property<string>("DescricaoProjeto")
                        .HasColumnType("text");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UsuarioCriadorId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioCriadorID");

                    b.HasKey("Id")
                        .HasName("PK__Projetos__3214EC27430A783F");

                    b.HasIndex(new[] { "UsuarioCriadorId" }, "IX_Projetos_UsuarioCriadorID");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Tarefa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("LActive")
                        .HasColumnType("int")
                        .HasColumnName("lActive");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioResponsavelId")
                        .HasColumnType("int")
                        .HasColumnName("UsuarioResponsavelID");

                    b.HasKey("Id")
                        .HasName("PK__Tarefas__3214EC27E9A37145");

                    b.HasIndex(new[] { "ProjetoId" }, "IX_Tarefas_ProjetoId");

                    b.HasIndex(new[] { "UsuarioResponsavelId" }, "IX_Tarefas_UsuarioResponsavelID");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValue("");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3214EC27AD244FFB");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Comentario", b =>
                {
                    b.HasOne("ManagerTask.Domain.Entities.Tarefa", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("TarefaId");

                    b.HasOne("ManagerTask.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.HistoricoAtividade", b =>
                {
                    b.HasOne("ManagerTask.Domain.Entities.Tarefa", "Tarefa")
                        .WithMany("HistoricoAtividades")
                        .HasForeignKey("TarefaId");

                    b.HasOne("ManagerTask.Domain.Entities.Usuario", "Usuario")
                        .WithMany("HistoricoAtividades")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__Historico__Usuar__44FF419A");

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Projeto", b =>
                {
                    b.HasOne("ManagerTask.Domain.Entities.Usuario", "UsuarioCriador")
                        .WithMany("Projetos")
                        .HasForeignKey("UsuarioCriadorId")
                        .HasConstraintName("FK__Projetos__Usuari__398D8EEE");

                    b.Navigation("UsuarioCriador");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Tarefa", b =>
                {
                    b.HasOne("ManagerTask.Domain.Entities.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagerTask.Domain.Entities.Usuario", "UsuarioResponsavel")
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioResponsavelId")
                        .HasConstraintName("FK__Tarefas__Usuario__3C69FB99");

                    b.Navigation("Projeto");

                    b.Navigation("UsuarioResponsavel");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Tarefa", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("HistoricoAtividades");
                });

            modelBuilder.Entity("ManagerTask.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("HistoricoAtividades");

                    b.Navigation("Projetos");

                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
